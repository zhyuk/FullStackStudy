#jsp 스크립트 태그들 : 자바 소스 코드를 기술할 수 있는 태그
	- 절대 중첩해서 사용 불가능하다.

	1. 지시태그 (Derection Tag) : 페이지의 인코딩, 필요한 라이브러리 추가, 언어 설정 등 페이지 전반적인 설정을 처리할 때 사용하는 태그임.
	[형식] <%@ 속성명="속성값" 속성명="속성값" %>

	2. 실행태그 (Scriptlet Tag) : 페이지에서 실행할 소스코드가 기술되는 태그 = 자바파일에서 메소드 안에 기술되는 코드들과 동일함. (지역변수, 반복문, 조건문, 출력문(System.out.print~, out.print~~~ 모두 기술 가능))
	[형식] <% 실행코드들...; %>

	3. 선언태그(declaration Tag) : 전역변수와 전역메소드를 선언하는 태그 => 자바파일에서 클래스 안에 기술되는 코드들과 동일함. 
	[형식] <%! 전역변수 선언, 전역메소드 선언(System.out.print~~만 기술 가능))  %>

	4. 표현태그(Expression Tag) : body태그에 출력할 수 있는 출력문을 줄여놓은 태그
	* jsp 내장 객체 중 body태그에 출력을 할 수 있는 기능을 제공해주는 객체 : out
	out.print("출력할 문자열값<br>"); => html형식으로 출력해줌.(<br>을 태그로 인식하여 한줄바꿈 적용함)
	[형식] <%=출력할 값 %>  ** 안에 절대 세미콜론(;)을 기술하면 안됨 **
	
	===> java소스코드로 기술하는 스크립트 태그들
	
	* 액션태그 : 객체 생성, getter, setter메소드들을 쉽게 호출하여 연결하여 사용하거나 페이지 이동, 페이지 연결, 파라미터 전달 등의 기능을 사용할 때 이용하는 태그임.
	jsp에서 제공하는 기본 스크립트 태그들의 기능을 조금 더 편하게 확장하여 자바 소스코드가 아닌 태그 형식으로 코드를 기술할 수 있도록 나온 태그임. 동적인 기능을 부여할 때 사용함.
	jsp기본 스크립트 태그 중 표현 태그를 이용하거나 EL(표현 언어)를 이용하여 속성값을 기술할 수 있다.
	[형식] <jsp:액션태그명 속성명="속성값"></jsp:액션태그명 속성명="속성값"> 또는 <jsp:액션태그명 속성명="속성값"/>

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
	* 소스 맨 위에 기술되는 것이 권장사항
	* page language="java" : 자바 소스코드를 작성하겠다는 의미. (jsp는 기본이 자바 언어기 때문에 생략가능)
	* contentType="text/html; charset=UTF-8" : 내가 작성한 코드를 html형식으로 컴파일하겠다는 의미
	* pageEncoding="UTF-8" : 페이지를 utf-8 형식으로 컴파일하겠다는 의미.
	
# 페이지 이동방식
	* 리다이렉트(=리다이렉팅) : 데이터 전송을 할 수 없이 페이지 이동이 이루어지는 방식(url변경됨) 대표적인 리다이렉트 방식에 관련된 속성 (a태그의 href, form태그의 action, 자바스크립트의 location.href 속성으로 이동하는 방식 등)
	* 포워드(=포워딩) : 데이터 전송을 할 수 있으며, url변경이 없이 페이지 이동을 하는 방식. 서버단에서 forward방식으로 전송하는(이동하는) 방식(대표적인 포워딩 방식 : 지시태그의 에러페이지 방식이나 jsp의 forward 속성으로 이동하는 방식 등)

# 페이지 연결
	* 서로 다른 페이지를 하나의 페이지로 연결하는 방법
		1. include 지시태그를 사용하는 방법 : 해당 파일의 소스코드를 그대로 가져와서 붙여넣기 한 뒤 같이 컴파일하는 방식
		2. jsp:include 액션태그를 사용하는 방법 : 해당 파일의 소스코드를 html형식으로 컴파일을 마친 후에 해당 코드를 붙여넣기 한다.

#클래스 파일 만들기
경로 : src/main/java
패키지명 : com.dto , com.dao
일반클래스명: 
com.dto => MemberBean.java, Person.java
com.dao => Calculator.java

#라이브러리 추가 및 파일을 만드는 순서
	1. 필요한 라이브러리 추가를 제일 먼저 진행할 것
	2. .java파일을 2번째로 만들 것
	3. jsp, html, css, js파일 필요한 순서로 만들 것
	4. WEB-INF안에 있는 web.xml 파일에 필요한 코드 기술할 것

====================================================================================
[참고] 맥OS jsp
https://velog.io/@wijoonwu/JSP-Servlet
https://developmentrecord.tistory.com/entry/Java-JDK-%EC%84%A4%EC%B9%98-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EC%84%A4%EC%A0%95-%EB%A7%A5%EB%B6%81-Mac-Pro-M3
