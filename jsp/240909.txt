#Ajax
	: 페이지 전체를 모두 로딩하지 않고 필요한 부분에 대해서만 갱신을 할 수 있도록 하는 기술을 의미함.
	데이터는 json방식의 데이터, xml데이터, html데이터, text파일 등을 주고받을 수 있다.

	**단, 다른 서버로의 전송은 해당 서버에 권한이 없는 경우 데이터를 주고받을 수 없다.
	**이진데이터(바이트 형식의 데이터)를 주고받을 수 없다.
	**반드시 요청은 서버로만 보낼 수 있다.

	javascript방식 : XMLHttpRequest객체 사용
	jQuery 방식 : $.ajax() 함수 사용

	비동기통신이 이루어지는 순서
	1. 클라이언트의 요청(비동기통신에 필요한 객체 생성 및 연결, 전송까지 포함)
	2. 서버에서의 응답
	3. 클라이언트에 응답 도착(비동기통신 적용)

	[JavaScript 방식 순서]
	1. XMLHttpRequest객체 생성
	[예시] : var xhttp = new XMLHttpRequest();

	2. 서버로 보낼 요청 데이터의 타입 설정 및 연결 : open()
	[예시] : xhttp.open("데이터전송방식", "요청url주소", 비동기여부);
	데이터전송방식 : GET, POST
	요청url주소 : /test.do 등
	비동기여부(비동기화여부) : true, false 중 선택(true : 비동기방식, false : 동기방식)

	3. 서버로 데이터 전송하기 : send()
	[예시] : xhttp.send();

	** readState 속성 : 객체의 상태를 나타내는 속성
	- 0 (UNSET) : 비동기객체가 생성된 상태
	- 1 (OPEND) : open()메소드가 정상적으로 실행된 상태
	- 2 (HEADERS_RECEIVED) : 데이터가 서버로 모두 SEND되어 해당 요청의 응답이 도착만 된 상태
	- 3 (LOADING) : 데이터를 클라이언트의 브라우저로 응답하기 위해 준비하는 처리 단계
	- 4 (DONE) : 요청한 데이터가 모두 응답을 완료한 상태

	** status 속성 : 응답 결과 상태를 나타내는 코드값
	[예시]
	- 200 : 정상 (요청 정보가 존재한다는 의미)
	- 400 : 비정상 (요청 페이지가 존재하지 않는다는 의미) 
	...  등등 

	** onreadystatechange 속성 : 비동기 객체의 상태가 변경이 될 때마다 실행되는 속성
	
	[jQuery 방식 순서]
	** 반드시 jQuery 라이브러리가 먼저 등록되어야 한다.
	$.ajax({json형식의 옵션 설정});
	[예시]
	$.ajax({
	url : "요청할 url 주소",
	type : "데이터전송방식(GET/POST)",
	data : {전송할 파라미터의 "key" : "value" 속성으로 json 방식으로 설정},
	async : true 또는 false, // 비동기(true), 동기(false) 여부
	cache : true 또는 false, // 데이터를 주고 받을 때 데이터를 저장(true)할 지, 저장해 놓지 않을지(false) 여부
	success : function(변수명){/*변수명 : 성공시에 반환받을 데이터를 담음*/ //성공할 때 처리할 로직},
	error : function([변수명,...]){/*예, state : 객체*/ // 에러발생 시 처리할 로직}
	});

#URL 경로
	- html로 기술하는 url경로(href, action 속성)
	- js로 기술하는 url경로(location.href)
	- jQuery Ajax로 기술하는 url경로("url" 속성)
	- response.sendRedirect("url경로")
	=> 앞에 아무것도 기술하지 않으면 (./)가 생략된 것임.
	=> 앞에 "/"가 기술되어 있으면 컨텍스트 패스를 제거하라는 의미임.

	- request로 기술하는 forward("/url경로")
	- 서블릿이나 필터로 설정하는 url패턴 경로
	=> / 앞에 컨텍스트 패스가 존재함.
	=> 앞에 아무것도 기술하지 않으면 컨텍스트 패스를 제거하라는 의미임.