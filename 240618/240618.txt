#클래스를 한 파일에 기술하는 조건

- 메인클래스와 일반클래스를 한 파일에 기술하는 경우
1. 반드시 class 키워드 앞에 [public] 접근제어자는 main 클래스에만 붙일 수 있다. (일반 클래스는 public 접근제어자 불가능)
2. 반드시 public 클래스와 파일명이 동일해야 한다. (main 클래스의 클래스명이 파일명이 되어야만 한다.)

- 일반클래스 여러 개를 한 파일에 기술하는 경우
1. 반드시 파일명과 동일한 클래스에만 public 접근제어자를 붙일 수 있다. (해당 경우, 클래스 모두 접근제어자를 default 로 사용해야함.)


#생성자 오버로딩

오버로딩 조건
1. *클래스명과 메소드명이 동일해야한다.
2. 메소드명이 동일해야한다.
3. 매개변수의 갯수가 달라야한다.
4. 매개변수의 자료형이 달라야한다.
5. 매개변수의 갯수가 동일한 경우, 자료형의 위치가 달라야한다.

#키워드 this / 생성자호출문 this()

- 키워드 this
this를 가지고 있는 인스턴스(= 클래스 복제본, = 나를 감싸고 있는 클래스)
-> 접근할 수 있는 대상 : this가 가리키고 있는 인스턴스의 멤버들만 접근가능 (멤버변수, 멤버메소드)

- 생성자호출문 this()
this( [매개인자 값,...] ) 생성자호출문
-> this를 감싸고 있는 인스턴스의 생성자를 호출함

조건 
1. this() 생성자호출문은 반드시 생성자 선언문의 맨 첫번째 줄에만 기술할 수 있다.
2. 반드시 나와는 다른 생성자를 호출해야만 한다.
3. **생성자를 여러 번 호출한다고 객체 생성이 여러 번 되는 것은 아니다. (반드시 new 키워드 뒤에 붙은 생성자 호추룸ㄴ에 의해서만 객체 생성이 이루어진다.)

#기타제어자 (Modify)

final : ~할 수 없는, 금지하는 (변수선언문 앞에 기술되는 경우 상수가 된다.)
static : 메모리를 공유하도록 해주는 제어자
전역의 (프로그램의 실행부터 종료되는 시점까지 살아있는)


static 메소드의 경우, 기타제어자 static가 붙은 멤버 변수만 올 수 있다.
ex)
 
