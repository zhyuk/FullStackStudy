# 프로젝트 작업 순서
    - 데이터베이스 테이블 생성
    1. 라이브러리 추가
    2. VO 클래스 생성(DB 테이블 구조를 클래스화)
    3. 상황에 따른 SQL쿼리문 작성
    3-1. 서블릿 설정 파일 생성(비즈니스 레이어 부분. (JDBC 템플릿 연결))
    4. DAO 클래스 생성
    5. SVC 클래스 생성(DAO 클래스의 소스가 오픈되는 것을 방지)
    6.  jsp 파일 생성(6번의 순서는 상관없으나, URL이 나오기 때문에 jsp 파일을 먼저 만드는 것을 권장)
    6. Controller 생성
    7. 서블릿 설정 파일 생성(스프링 빈 설정 파일 생성)
        * 스프링 빈 설정 파일
            - 비즈니스 레이어 : 데이터베이스 연결객체, 데이터베이스 관련 템플릿 객체, DAO객체, SVC객체, AOP 관련
            - 프레젠테이션 레이어 : 핸들러맵퍼, 뷰 리졸버, 컨트롤러객체 생성, 파일업로드 객체, ajax 관련 객체
    8. web.xml 파일에 필요한 필터객체, 서블릿객체 등등 설정하기

[Tip]
    <%@ include file=""/>(지시태그로 사용한 include) : 소스코드를 그대로 가져와 붙여넣은 후 컴파일 진행.
    <jsp:include file=""/>(jsp 액션태그로 사용한 include) : 소스코드 컴파일 후 html 형식으로 가져옴.

# 스프링 컨테이너(XmlWebApplicationContext)

    * applicationContext.xml
    - 객체들
    1. dataSource : BasicDataSource / DataSource
    2. jdbcTemplate : JdbcTemplate (1번 dataSource객체 주입)
    3. boardDAODBCP : BoardDAODBCP (2번 jdbcTemplate객체 @Autowired 주입)
    4. boardService : BoardServiceImpl / BoardService (3번 boardDAODBCP객체 @Autowired 주입)
    5. userDAODBCP : UserDAODBCP (2번 jdbcTemplate객체 @Autowired 주입)
    6. userService : UserServiceImpl / UserService (5번 userDAODBCP객체 @Autowired 주입)
    -------------------------------------------------------------------------------------------
    deleteBoardController : DeleteBoardController / Controller (4번 boardService객체 @Autowired 주입)
    getBoardController : GetBoardController / Controller (5번 userDAODBCP객체 @Autowired 주입)
    getBoardListController : GetBoardListController / Controller (4번 boardService객체 @Autowired 주입)
    insertBoardController : InsertBoardController / Controller (4번 boardService객체 @Autowired 주입)
    updateBoardController : UpdateBoardController / Controller (4번 boardService객체 @Autowired 주입)
    loginController : LoginController / Controller (6번 userService객체 @Autowired 주입)
    logoutController
    -------------------------------------------------------------------------------------------
    * presentation-layer.xml 파일

    - Controller객체 생성
    login : LoginController / Controller
    getBoardList : GetBoardListController / Controller
    getBoard : GetBoardController / Controller
    insertBoard : InsertBoardController / Controller
    updateBoard : UpdateBoardController / Controller
    deleteBoard : DeleteBoardController / Controller
    logout : LogoutController / Controller

    - HandlerMapping객체 생성
            KEY         :   VALUE
    "/login.do"         : login
    "/getBoardList.do"  : getBoardList
    "/getBoard.do"      : getBoard
    "/insertBoard.do"   : insertBoard
    "/updateBoard.do"   : updateBoard
    "/deleteBoard.do"   : deleteBoard
    "/logout.do"        : logout

    - ViewResolver객체 생성(forward만 ViewResolver 처리됨)
    viewResolver : InternalResourceViewResolver
        prefix : /WEB-INF/
        suffix : .jsp
    =====================================================================================================

# ModelAndView
    mav.addObject("board", board);는 request.setAttribute("board", board)와 동일함.
    
    mav.setViewName의 매개변수 안
		- "redirect:" 이 없는 경우 => forwarding 방식으로 페이지 이동(뷰리졸버 객체 실행)
		- "redirect:" 이 있는 경우 => redirect 방식으로 페이지 이동(뷰리졸버 객체 실행 X. WEB-INF 경로 안의 페이지들은 접근 안됨)


