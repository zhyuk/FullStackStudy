package com.springbook.biz.user.impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.jdbc.core.RowMapper;

import com.springbook.biz.common.JDBCUtil;
import com.springbook.biz.user.UserVO;

public class UserRowMapper implements RowMapper<UserVO> {

	@Override
	public UserVO mapRow(ResultSet rs, int rowNum) throws SQLException {
		UserVO uvo = new UserVO();
		uvo.setId(rs.getString("id"));
		uvo.setPassword(rs.getString("password"));
		uvo.setName(rs.getString("name"));
		uvo.setRole(rs.getString("role"));

		return uvo;
	}
	
	private final String USER_LOGIN = "select * from users where id = ? and password = ?";
	private final String USER_LIST = "select * from users order by id";
	private final String USER_INSERT = "insert into users values (?, ?, ?, ?)";
	private final String USER_UPDATE = "update users set password = ? , name = ?, role = ? where id = ?";
	private final String USER_DELETE = "delete from users where id = ? and password = ?";

	// 로그인
	public UserVO loginUser(UserVO vo) {
		System.out.println("user의 DAO loginUser실행");
		UserVO user = null;
		try {
			conn = JDBCUtil.getConnection();
			stmt = conn.prepareStatement(USER_LOGIN);
			stmt.setString(1, vo.getId()); //"admin"
			stmt.setString(2, vo.getPassword()); //"1111"
			rs = stmt.executeQuery();
			while(rs.next()) {
				user = new UserVO();
				user.setId(rs.getString("id")); //admin
				user.setPassword(rs.getString("password")); //1111
				user.setName(rs.getString("name")); //관리자
				user.setRole(rs.getString("role")); //Admin
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			JDBCUtil.close(rs, stmt, conn);
		}
		
		return user;
	}

	// 회원목록 조회
	public List<UserVO> getUserList(UserVO vo) {
		System.out.println("===> JDBC로 getUserList() 기능 처리");
	}

	// 회원가입
	public int insertUser(UserVO vo) {
		System.out.println("===> JDBC로 insertUser() 기능 처리");
		
	}
 
	// 회원정보 수정
	public int updateUser(UserVO vo) {
		System.out.println("===> JDBC로 updateUser() 기능 처리");
		
	}

	// 회원정보 삭제
	public int deleteUser(UserVO vo) {
		System.out.println("===> JDBC로 deleteUser() 기능 처리");
		
	}

}
