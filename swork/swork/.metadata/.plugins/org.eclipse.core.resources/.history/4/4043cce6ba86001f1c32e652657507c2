package com.springbook.biz.common;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Service;

import com.springbook.biz.board.BoardVO;

@Service
@Aspect
public class BeforeAdvice {

	@Pointcut("execution(* com.springbook.biz..*Impl.*(..))")
	public void allPointcut() {}
	
	public void beforeLog(JoinPoint jp) {

		String method = jp.getSignature().getName();
		// Object 자료형의 배열로 가져오는 이유 : 매개변수의 자료형이 다 다를 수 있기 때문에 모두 담을 수 있는 자료형으로
		Object[] args = jp.getArgs();

		System.out.print("args.length: ");
		System.out.println(args.length);

		BoardVO b = (BoardVO) args[0];
		System.out.println("b.getSeq(): " + b.getSeq());
		System.out.println("b.getTitle(): " + b.getTitle());

		System.out.println("[사전처리] " + method + "() 메소드 args 정보 : " + args[0].toString());
	}
}
