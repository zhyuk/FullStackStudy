package com.springbook.view.controller;

import java.io.File;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.multipart.MultipartFile;

import com.springbook.biz.BoardService;
import com.springbook.biz.BoardVO;

@Controller
@SessionAttributes("board")
public class BoardController {

	@Autowired
	private BoardService boardService;

	// ################## 로직 추가 #######################//
	String realPath = "c:/swork/nine/src/main/webapp/img/";

	@PostMapping(value = "/insertBoard.do")
	// 도메인 주소를 서버의 절대경로로 변경하는 로직(실제로 웹 서버에 배포할 때는 이 로직으로 처리할 것)
//	public String insertBoard(MultipartHttpServletRequest request, BoardVO vo) throws 
	// IllegalStateException, IOException{
	public String insertBoard(BoardVO vo) throws IllegalStateException, IOException {

		MultipartFile uploadFile = vo.getUploadFile(); // 에이팜.png

//		도메인 주소를 서버의 절대경로로 변경하는 로직(실제로 웹 서버에 배포할 때는 이 로직으로 처리할 것)
//		realpath = request.getSession().getServletContext().getRealPath("/img/");

		File f = new File(realPath);
		if (!f.exists()) {
			// c:/swork/nine/src/main/webapp 폴더에 img폴더 생성
			f.mkdirs();
		}

		// !uploadFile.isEmpty() = 파일이 비어있지 않다면 = 파일을 업로드했으면
		if (!uploadFile.isEmpty()) {
			String fileName = uploadFile.getOriginalFilename(); // 에이팜.png
			vo.setFilename(fileName); // BoardVO Filename 멤버필드를 에이팜.png으로 초기화
			// realPath(c:/swork/nine/src/main/webapp/img/)의 경로에 fileName(에이팜.png)이라는 파일명을
			// 쓰세요(파일 생성)
			// 실제로 서버로 파일이 업로드되는 지점.
			uploadFile.transferTo(new File(realPath + fileName));
		}
		boardService.insertBoard(vo);
		return "/getBoardList.do";
	}

	// 글 목록
	@RequestMapping("/getBoardList.do")
	public String getBoardListPost(BoardVO vo, Model model) {
		System.out.println("글 목록 검색 처리");

		model.addAttribute("boardList", boardService.getBoardList(vo));
		return "/WEB-INF/board/getBoardList.jsp";
	}

	// 글 상세 조회
	@RequestMapping("/getBoard.do")
	public String getBoard(BoardVO vo, Model model) {
		model.addAttribute("board", boardService.getBoard(vo));
		return "WEB-INF/board/getBoard.jsp";
	}

	// 파일다운로드 //################## 로직 추가예정 #######################//
	@GetMapping(value = "/download.do")
	public void fileDownLoad(
			@RequestParam(value = "filename", required = false) String filename,
			HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		System.out.println("파일 다운로드");
	}
}
