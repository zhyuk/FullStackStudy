* 반응형 작업을 진행할 때 필수로 들어와야하는 meta태그로 현재 화면을 보고있는 디바이스의 너비를 뷰포트 너비로 1:1 비율로 가져온다는 의미를 가짐.
<meta name="viewport" content="width=device-width, initial-scale=1.0">

#시맨틱태그
    * header : 메뉴, 머릿글 등 웹사이트의 상단부에서 사용. 메뉴를 사용할 때는 <nav></nav> 태그를 사용한다. 
    * nav : 웹사이트의 메뉴 즉, 네비게이션을 담당할 때 사용.
    * main : 웹사이트 내에서 가장 중점적인 것을 묶음처리할 때 사용.
    * section : 주제에 따라 가장 큰 묶음을 담당할 때 사용.
    * article : section 태그 내에서 소단락으로 묶을 때 사용.
    * footer : 꼬릿말. 가장 마지막 하단부에서 사이트맵, 회사정보, 저작권정보 등등을 담당할 때 사용.

    시맨틱태그는 모두 블럭요소로, h1~h6 머릿글 태그를 묶을 수 있는 유일한 블럭레벨 요소이다.
    width: 100%, 위아래 마진 X의 천성을 갖고 있다.
 
#em, rem
    * em은 부모태그의 사이즈를 기준으로 크기를 조절할 때 사용. %와 같은 의미를 갖고 있음 
    * rem은 웹 브라우저의 기본 사이즈를 기준으로 크기를 조절할 때 사용.

#overflow 속성을 사용할 수 있는 조건.
    * width 또는 height값이 정의되어 있어야 한다. ==> 정의되지 않으면 나의 영역을 넘어가는지를 알 수 없음 

#벤더프리픽스(Vendor Prefix)
    : 웹 브라우저 공급자가 새로운 기능을 제공할 때 이전 버전의 웹 브라우저에 그 사실을 알려주기 위해 사용하는 접두어(prefix)를 의미함.
    ** 높은 버전의 브라우저들은 대부분의 기능이 제공되므로 프리픽스를 사용할 필요가 없다.
    ** 기본 속성명이나 속성값을 기술하기 전에 먼저 기술해야 하며, 벤더프리픽스가 기술되지 않은 기본석성명이나 기본속성값은 반드시 맨 마지막에 기술해주어야 한다.(생략불가)

    * 프리픽스를 사용해야하는 경우
    1. CSS 권고안에 포함이 되지 못한 기능인 경우
    2. CSS 권고안에는 포함되어 있지만 완벽하게 제정된 상태가 아닌 기능인 경우
    3. 해당 기능이 포함되어 있지 않은 이전 버전의 웹 브라우저인 경우

    * 웹 브라우저별 벤더프리픽스
    -------------------------------------------------------------------------------------
    브라우저(Browser)별 벤더프리픽스(Vender Prefix)
    IE, Edge 브라우저 : -ms-
    Chorme, Android Browser, Chrome for Android, Safari, iOS Safari 브라우저 : -webkit-
    Firefox 브라우저 : -moz-
    브라우저 : -webkit-
    Opera 브라우저 : -o-
    ------------------------------------------------------------------------------------

#플렉서블 레이아웃
    * flex-wrap : 줄바꿈 속성
        - wrap : 영역을 넘어가게될 때 자동으로 줄바꿈하여 배치
        - nowrap(기본값) : 영역을 넘어가도 줄바꿈 하지 않음.
        * nowrap인 경우 padding + 컨텐츠 너비가 깨지지 않는 한도내에서는 플렉서블 박스안에 width 영역을 줄여서 표현해준다.
            만약 깨지는 범위까지 도달하면 플렉서블 박스를 넘어서 표현된다.

    * flex-direction : 방향 설정 속성
        - 수평방향 : row(기본값) / row-reverse(역방향)
        - 수직방향 : column / column-reverse (역방향)

        * row 속성 적용 시, 너비는 컨텐츠 너비만큼 높이는 부모 플렉서블 박스의 높이만큼으로 기본값을 가지고,
            column 속성 적용 시, 너비는 부모 플렉서블 박스의 너비만큼 높이는 컨텐츠 높이만큼으로 기본값을 가진다.

        ** reverse 속성값을 적용한 경우, CSS의 text-align:right 같은 개념이 아닌, 요소의 위치부터 역방향으로 배치된다.
        즉, cloumn-reverse 적용 ==> 요소가 밑에서부터 배치/ row-reverse 적용 ==> 요소가 오른쪽부터 배치

    * 플렉서블 레이아웃의 자식요소에서 height값을 지정하지 않을 경우, 컨텐츠 높이만큼이 아닌 부모 플렉서블 박스의 높이값만큼을 갖는다.

    * 플렉서블 박스의 자식요소의 위치를 조절할 때는 margin을 사용한다. 
        예: 3번박스만 오른쪽으로 붙이고 싶은 경우, 3번 박스에 margin-left:auto; 속성을 적용해서 오른쪽으로 붙일 수 있다.

    * justify-content : 수평정렬 속성
        - flex-start(기본값) : 왼쪽을 기준으로 배치
        - center : 중앙에 가상의 선을 기준으로 중앙배치
        - flex-end : 오른쪽을 기준으로 배치 (text-align: right;와 같은 효과를 지님.)
        - space-btween : 처음과 끝을 채우고, 사이에 위치한 요소들을 동일한 간격으로 떨어지게 배치
        - space-around : 처음부터 끝까지 모두 동일한 간격으로 떨어지게 배치하는 속성. 

    * align-items : 수직정렬 속성
        - stretch(기본값) : height값을 부모 플렉스박스의 높이 100%로 인식
        - flex-start : 시작점을 기준으로 배치하는 속성
        - center : 수직방향의 중심을 기준으로 중심에 위치하는 속성 ==> justify-content: center;와 함께 사용시 부모 플렉서블 박스의 정중앙에 위치하게 된다.
        - flex-end : 끝나는 지점을 기준으로 배치하는 속성